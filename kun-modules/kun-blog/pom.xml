<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.kun</groupId>
        <artifactId>kun-modules</artifactId>
        <version>4.0</version>
    </parent>
    <artifactId>kun-blog</artifactId>
    <description>坤坤博客系统</description>

    <!--    <properties>-->
    <!--        <artifactId>${project.artifactId}</artifactId>-->
    <!--    </properties>-->

    <dependencies>
        <dependency>
            <groupId>com.kun</groupId>
            <artifactId>kun-common-database</artifactId>
            <version>4.0</version>
        </dependency>
        <dependency>
            <groupId>com.kun</groupId>
            <artifactId>kun-common-web</artifactId>
            <version>4.0</version>
        </dependency>
        <dependency>
            <groupId>com.kun</groupId>
            <artifactId>kun-common-log</artifactId>
            <version>4.0</version>
        </dependency>
        <dependency>
            <groupId>com.kun</groupId>
            <artifactId>kun-common-file</artifactId>
            <version>4.0</version>
        </dependency>
        <dependency>
            <groupId>com.kun</groupId>
            <artifactId>kun-common-http</artifactId>
            <version>4.0</version>
        </dependency>
        <dependency>
            <groupId>com.kun</groupId>
            <artifactId>kun-common-redis</artifactId>
            <version>4.0</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <!--jwt-->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
        </dependency>
        <!-- 验证码生成 -->
        <dependency>
            <groupId>com.github.whvcse</groupId>
            <artifactId>easy-captcha</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>

        <!--解决无法序列号LocalDateTime问题-->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.13.1</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <!-- 添加资源 在yml中用@@可以读取pom.xml文件中的配置信息 -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--打包docker插件相关参数的配置-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.13</version>
                <configuration>
                    <!--打包的镜像名-->
                    <imageName>${project.artifactId}:${project.version}</imageName>
                    <!--Dockerfile文件位置，以项目的 root 目录为根节点，建议到单独建立一个目录-->
                    <dockerDirectory>${project.basedir}/src/main/docker/</dockerDirectory>
                    <imageTags>
                        <imageTag>latest</imageTag>
                    </imageTags>
                    <!--执行构建docker镜像的时候需要哪些文件，springboot项目指定 打包好的jar 镜像就好-->
                    <resources>
                        <resource>
                            <!--这里指定的文件是target中的jar文件-->
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
